temp #sig
temp = t.test(post_hoc$lrd_1, post_hoc$lrd_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$lrd_1, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
#2
temp = t.test(post_hoc$lrd_2, post_hoc$lrd_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #marginal
temp = t.test(post_hoc$lrd_2, post_hoc$lrd_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$lrd_2, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
#3
temp = t.test(post_hoc$lrd_3, post_hoc$lrd_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #non-sig
temp = t.test(post_hoc$lrd_3, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #marg
#4
temp = t.test(post_hoc$lrd_4, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
#get cohen's kappa
cohen.kappa(dat[ , c(10:17)])
####Now let's do whether a sentence was scored correctly####
dat3 = dat[ , -c(10:17)]
apply(dat3[ , c(7, 9:15)], 2, mean)
####Analysis!####
library(caret)
library(psych)
library(ez)
options(scipen = 999)
####Okay, first going to look at the trial level proportion correct####
##These analyses are looking at whether the words in the sentences were correctly recalled
dat = read.csv("scored_combined.csv")
dat2 = dat[ , -c(18:23)]
long.dat = melt(dat2,
measure.vars = c("Prop1", "Prop2", "lrd_0", "lrd_1", "lrd_2", "lrd_3", "lrd_4", "lrd_5"))
colnames(long.dat)[10:11] = c("Rater", "Score")
#run an ANOVA
model = ezANOVA(long.dat,
within = Rater,
dv = Score,
wid = Participant.Private.ID,
type = 3,
detailed = T)
model
#Effect should be driven by differences between the upper and lower
#Get mean recall rates
apply(dat2[ , c(10:17)], 2, mean) #Yep, that seems to be the case
#t.test time
post_hoc = cast(long.dat, Participant.Private.ID ~ Rater, mean)
#Rater 1 vs lrd data
temp = t.test(post_hoc$Prop1, post_hoc$lrd_0, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #non-sig
temp = t.test(post_hoc$Prop1, post_hoc$lrd_1, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #non-sig
temp = t.test(post_hoc$Prop1, post_hoc$lrd_2, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$Prop1, post_hoc$lrd_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$Prop1, post_hoc$lrd_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$Prop1, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
##rater 2
temp = t.test(post_hoc$Prop2, post_hoc$lrd_0, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #non-sig
temp = t.test(post_hoc$Prop2, post_hoc$lrd_1, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #non-sig
temp = t.test(post_hoc$Prop2, post_hoc$lrd_2, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$Prop2, post_hoc$lrd_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$Prop2, post_hoc$lrd_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$Prop2, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
##All the lrd's vs each other
#0
temp = t.test(post_hoc$lrd_0, post_hoc$lrd_1, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #non-sig
temp = t.test(post_hoc$lrd_0, post_hoc$lrd_2, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$lrd_0, post_hoc$lrd_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$lrd_0, post_hoc$lrd_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$lrd_0, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
#1
temp = t.test(post_hoc$lrd_1, post_hoc$lrd_2, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #marginal
temp = t.test(post_hoc$lrd_1, post_hoc$lrd_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$lrd_1, post_hoc$lrd_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$lrd_1, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
#2
temp = t.test(post_hoc$lrd_2, post_hoc$lrd_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #marginal
temp = t.test(post_hoc$lrd_2, post_hoc$lrd_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
temp = t.test(post_hoc$lrd_2, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
#3
temp = t.test(post_hoc$lrd_3, post_hoc$lrd_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #non-sig
temp = t.test(post_hoc$lrd_3, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #marg
#4
temp = t.test(post_hoc$lrd_4, post_hoc$lrd_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #sig
#get cohen's kappa
cohen.kappa(dat[ , c(10:17)])
####Now let's do whether a sentence was scored correctly####
dat3 = dat[ , -c(10:17)]
apply(dat3[ , c(7, 9:15)], 2, mean)
apply(dat3[ , c(7, 9:15)], 2, mean)
long.dat2 = melt(dat2,
measure.vars = c("Corr1", "Corr2", "lrd_cor_0", "lrd_cor_1", "lrd_cor_2", "lrd_cor_3", "lrd_cor_4", "lrd_cor_5"))
long.dat2 = melt(dat2,
measure.vars = c("Corr1", "Corr2", "lrd_cor_0", "lrd_cor_1", "lrd_cor_2", "lrd_cor_3", "lrd_cor_4", "lrd_cor_5"))
long.dat2 = melt(dat3,
measure.vars = c("Corr1", "Corr2", "lrd_cor_0", "lrd_cor_1",
"lrd_cor_2", "lrd_cor_3", "lrd_cor_4", "lrd_cor_5"))
colnames(long.dat2)[10:11] = c("Rater", "Score")
colnames(long.dat2)[8:9] = c("Rater", "Score")
#run an ANOVA
model2 = ezANOVA(long.dat2,
within = Rater,
dv = Score,
wid = Participant.Private.ID,
type = 3,
detailed = T)
model2
apply(dat3[ , c(7, 9:15)], 2, mean)
##post_hocs
post_hoc = cast(long.dat2, Participant.Private.ID ~ Rater, mean)
##Rater 1 vs lrd data
temp = t.test(post_hoc$Corr1, post_hoc$lrd_cor_0, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp #non-sig
##Rater 1 vs lrd data
temp1 = t.test(post_hoc$Corr1, post_hoc$lrd_cor_0, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp11$p.value, 3)
t1 = temp11$statistic
SEM1 = (temp11$conf.int[2] - temp11$conf.int[1]) / 3.92
##Rater 1 vs lrd data
temp1 = t.test(post_hoc$Corr1, post_hoc$lrd_cor_0, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #non-sig
temp1 = t.test(post_hoc$Corr1, post_hoc$lrd_cor_1, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #non-sig
temp1 = t.test(post_hoc$Corr1, post_hoc$lrd_cor_2, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$Corr1, post_hoc$lrd_cor_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$Corr1, post_hoc$lrd_cor_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$Corr1, post_hoc$lrd_cor_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
##rater 2
temp1 = t.test(post_hoc$Corr2, post_hoc$lrd_cor_0, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #non-sig
temp1 = t.test(post_hoc$Corr2, post_hoc$lrd_cor_1, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #non-sig
temp1 = t.test(post_hoc$Corr2, post_hoc$lrd_cor_2, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$Corr2, post_hoc$lrd_cor_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$Corr2, post_hoc$lrd_cor_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$Corr2, post_hoc$lrd_cor_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
##All the lrd's vs each other
#0
temp1 = t.test(post_hoc$lrd_cor_0, post_hoc$lrd_cor_1, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #non-sig
temp1 #marginal
temp1 = t.test(post_hoc$lrd_cor_0, post_hoc$lrd_cor_2, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$lrd_cor_0, post_hoc$lrd_cor_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
##All the lrd's vs each other
#0
temp1 = t.test(post_hoc$lrd_cor_0, post_hoc$lrd_cor_1, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #marginal
temp1 = t.test(post_hoc$lrd_cor_0, post_hoc$lrd_cor_2, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$lrd_cor_0, post_hoc$lrd_cor_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$lrd_cor_0, post_hoc$lrd_cor_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$lrd_cor_0, post_hoc$lrd_cor_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
#1
temp1 = t.test(post_hoc$lrd_cor_1, post_hoc$lrd_cor_2, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #marginal
temp1 #non-sig
temp1 = t.test(post_hoc$lrd_cor_1, post_hoc$lrd_cor_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$lrd_cor_1, post_hoc$lrd_cor_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$lrd_cor_1, post_hoc$lrd_cor_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
#2
temp1 = t.test(post_hoc$lrd_cor_2, post_hoc$lrd_cor_3, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #marginal
temp1 #sig
temp1 = t.test(post_hoc$lrd_cor_2, post_hoc$lrd_cor_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(post_hoc$lrd_cor_2, post_hoc$lrd_cor_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
#3
temp1 = t.test(post_hoc$lrd_cor_3, post_hoc$lrd_cor_4, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #non-sig
temp1 #marginal
temp1 = t.test(post_hoc$lrd_cor_3, post_hoc$lrd_cor_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #marg
temp1 #sig
#4
temp1 = t.test(post_hoc$lrd_cor_4, post_hoc$lrd_cor_5, paired = F, p.adjust.methods = "Bonferroni", var.equal = T)
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
source('~/GitHub/lrd-analysis/Sentences/sentences analyses.R')
View(dat3)
##Cohen's kappa
cohen.kappa(dat3[ , c(7, 9:15)])
##sensitivity and specificity
library(caret)
dat = read.csv("scored_combined.csv")
dat = read.csv("scored_combined.csv")
ref1 = factor(dat$Corr1)
##sensitivity and specificity
#set up
library(caret)
dat = read.csv("scored_combined.csv")
ref1 = factor(dat$Corr1)
ref2 = factor(dat$Corr2)
lev0 = factor(dat$lrd_cor_0)
lev1 = factor(dat$lrd_cor_1)
lev2 = factor(dat$lrd_cor_2)
lev3 = factor(dat$lrd_cor_3)
lev4 = factor(dat$lrd_cor_4)
(ref1, ref2)
(ref1, ref2)
ref1 = factor(dat$Corr1)
ref2 = factor(dat$Corr2)
lev0 = factor(dat$lrd_cor_0)
lev1 = factor(dat$lrd_cor_1)
lev2 = factor(dat$lrd_cor_2)
lev3 = factor(dat$lrd_cor_3)
lev4 = factor(dat$lrd_cor_4)
lev5 = factor(dat$lrd_cor_5)
#Compare the two human raters
table(ref1, ref2)
sensitivity(ref1, ref)
specificity(ref2, ref)
sensitivity(ref1, ref2)
specificity(ref1, ref2)
#Now compare all the lrd scorings to the second rater
#0
table(lev0, ref2)
sensitivity(lev0, ref2)
specificity(lev0, ref2)
#Compare the two human raters
table(ref1, ref2)
sensitivity(ref1, ref2)
specificity(ref1, ref2)
#Now compare all the lrd scorings to the first rater
#0
table(lev0, ref1)
sensitivity(lev0, ref1)
specificity(lev0, ref1)
#1
table(lev1, ref1)
sensitivity(lev1, ref1)
specificity(lev1, ref1)
#2
table(lev2, ref1)
sensitivity(lev2, ref1)
specificity(lev2, ref1)
#3
table(lev3, ref1)
sensitivity(lev3, ref1)
specificity(lev3, ref1)
#4
table(lev4, ref1)
sensitivity(lev4, ref1)
specificity(lev4, ref1)
#5
table(lev5, ref1)
sensitivity(lev5, ref1)
specificity(lev5, ref1)
#Now compare all the lrd scorings to the second rater
#0
table(lev0, ref2)
sensitivity(lev0, ref2)
specificity(lev0, ref2)
#1
table(lev1, ref2)
sensitivity(lev1, ref2)
specificity(lev1, ref2)
#2
table(lev2, ref2)
sensitivity(lev2, ref2)
specificity(lev2, ref2)
#3
table(lev3, ref2)
sensitivity(lev3, ref2)
specificity(lev3, ref2)
#4
table(lev4, ref2)
sensitivity(lev4, ref2)
specificity(lev4, ref2)
#5
table(lev5, ref2)
sensitivity(lev5, ref2)
specificity(lev5, ref2)
